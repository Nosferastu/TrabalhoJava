/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package matriz;

/**
 * 
 *
 * @author Nosferas
 */
public class Matriz {
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
      
    /*
        X  Y  Z  W  A           X  Y  Z  W  A
     0| 1  0  0  0  0        0| 1  1  1  1  1
     1| 0  1  0  0  0        1| 1  1  1  1  1
     2| 0  0  1  0  0        2| 1  1  1  1  1
     3| 0  0  0  1  0        3| 1  1  1  1  1
     4| 0  0  0  0  1        4| 1  1  1  1  1
        
        Tenho que zerar x[1,2,3,4] y[2,3,4] z[3,4] w[4]
    */  
        
    double x[] = {1,5,3,-3,9};
    double y[] = {6,7,8,2,8};
    double z[] = {8,8,-12,4,1};
    double w[] = {7,9,8,6,-22};
    double a[] = {-2,3,56,-7,3};
    
    //TODO: !!!Fazer uma repetição com um array de caracteres para mudar o [x,y,z,w,a]!!!
    
    
    for(int i = 1; i <= 4; i++){
        if(x[i] != 0){
        //TODO:
        //pegar a estrutura do if abaixo e substituir tudo que tem \\!"1"!// por \\!"i"!//
        //apagar todos os "if's" de x
            y[0] /= x[0];
            z[0] /= x[0];
            w[0] /= x[0];
            a[0] /= x[0];
            x[0] /= x[0];

            y[0] = (x[i] * y[0]) * -1;
            z[0] = (x[i] * z[0]) * -1;
            w[0] = (x[i] * w[0]) * -1;
            a[0] = (x[i] * a[0]) * -1;
            x[0] = (x[i] * x[0]) * -1;

            y[i] += y[0];
            z[i] += z[0];
            w[i] += w[0];
            a[i] += a[0];
            x[i] += x[0];
        }
    }
    
    for(int i = 2; i <=4 ; i++){
        if(y[i] != 0){
            z[1] /= y[1];
            w[1] /= y[1];
            a[1] /= y[1];
            x[1] /= y[1];
            y[1] /= y[1];


            z[1] = (y[i] * z[1]) * -1;
            w[1] = (y[i] * w[1]) * -1;
            a[1] = (y[i] * a[1]) * -1;
            x[1] = (y[i] * x[1]) * -1;
            y[1] = (y[i] * y[1]) * -1;

            y[i] += y[1];
            z[i] += z[1];
            w[i] += w[1];
            a[i] += a[1];
            x[i] += x[1];
        }
    }
    
    for(int i = 3; i <= 4; i++){
        if(z[i] != 0){
            w[2] /= z[2];
            a[2] /= z[2];
            x[2] /= z[2];
            y[2] /= z[2];
            z[2] /= z[2];
        
            w[2] = (z[i] * w[2]) * -1;
            a[2] = (z[i] * a[2]) * -1;
            x[2] = (z[i] * x[2]) * -1;
            y[2] = (z[i] * y[2]) * -1;
            z[2] = (z[i] * z[2]) * -1;
        
            y[i] += y[2];
            z[i] += z[2];
            w[i] += w[2];
            a[i] += a[2];
            x[i] += x[2];
        }
    }
    
    
    //w com uma unica casa antes de reverter o calculo
    if(w[4] != 0){
        
        z[3] /= w[3];
        a[3] /= w[3];
        x[3] /= w[3];
        y[3] /= w[3];
        w[3] /= w[3];
        
        z[3] = (w[4] * z[3]) * -1;
        a[3] = (w[4] * a[3]) * -1;
        x[3] = (w[4] * x[3]) * -1;
        y[3] = (w[4] * y[3]) * -1;
        w[3] = (w[4] * w[3]) * -1;
        
        y[4] += y[3];
        z[4] += z[3];
        w[4] += w[3];
        a[4] += a[3];
        x[4] += x[3];
    }
    
    for(int i = 3; i >= 0; i--){
        if(a[i] != 0){
            z[4] /= a[4];
            x[4] /= a[4];
            y[4] /= a[4];
            w[4] /= a[4];
            a[4] /= a[4];

            w[4] = (a[i] * w[4]) * -1;
            x[4] = (a[i] * x[4]) * -1;
            y[4] = (a[i] * y[4]) * -1;
            z[4] = (a[i] * z[4]) * -1;
            a[4] = (a[i] * a[4]) * -1;

            y[i] += y[4];
            z[i] += z[4];
            w[i] += w[4];
            x[i] += x[4];   
            a[i] += a[4];
        }
    }
    
    for(int i = 2; i >= 0; i--){
        if(w[i] != 0){
            z[3] /= w[3];
            x[3] /= w[3];
            y[3] /= w[3];
            a[3] /= w[3];
            w[3] /= w[3];

            x[3] = (w[i] * x[3]) * -1;
            y[3] = (w[i] * y[3]) * -1;
            z[3] = (w[i] * z[3]) * -1;
            a[3] = (w[i] * a[3]) * -1;
            w[3] = (w[i] * w[3]) * -1;
            
            y[i] += y[3];
            z[i] += z[3];
            w[i] += w[3];
            x[i] += x[3];   
            a[i] += a[3];
        }
    }
    
    for(int i = 1; i >= 0; i--){
        if(z[i] != 0){
            x[2] /= z[2];
            y[2] /= z[2];
            a[2] /= z[2];
            w[2] /= z[2];
            z[2] /= z[2];

            w[2] = (z[i] * w[2]) * -1;
            x[2] = (z[i] * x[2]) * -1;
            y[2] = (z[i] * y[2]) * -1;
            a[2] = (z[i] * a[2]) * -1;
            z[2] = (z[i] * z[2]) * -1;

            y[i] += y[2];
            w[i] += w[2];
            x[i] += x[2];   
            a[i] += a[2];
            z[i] += z[2];
        }
    }
    
    if(y[0] != 0){
        x[1] /= y[1];
        a[1] /= y[1];
        w[1] /= y[1];
        z[1] /= y[1];
        y[1] /= y[1];
        
        w[1] = (y[0] * w[1]) * -1;
        x[1] = (y[0] * x[1]) * -1;
        a[1] = (y[0] * a[1]) * -1;
        z[1] = (y[0] * z[1]) * -1;
        y[1] = (y[0] * y[1]) * -1;
                
        w[0] += w[1];
        x[0] += x[1];   
        a[0] += a[1];
        z[0] += z[1];
        y[0] += y[1];
    }
        System.out.print("X       ");
        System.out.print("Y       ");
        System.out.print("Z       ");
        System.out.print("W       ");
        System.out.println("A       ");
        System.out.print(x[0]+ "/   ");
        System.out.print(y[0]+ "/   ");
        System.out.print(z[0]+ "/   ");
        System.out.print(w[0]+ "/   ");
        System.out.println(a[0]+ "/   ");
        
        System.out.print(x[1]+ "/   ");
        System.out.print(y[1]+ "/   ");
        System.out.print(z[1]+ "/   ");
        System.out.print(w[1]+ "/   ");
        System.out.println(a[1]+ "/   ");
        
        System.out.print(x[2]+ "/   ");
        System.out.print(y[2]+ "/   ");
        System.out.print(z[2]+ "/   ");
        System.out.print(w[2]+ "/   ");
        System.out.println(a[2]+ "/   ");
        
        System.out.print(x[3]+ "/   ");
        System.out.print(y[3]+ "/   ");
        System.out.print(z[3]+ "/   ");
        System.out.print(w[3]+ "/   ");
        System.out.println(a[3]+ "/   ");
        
        System.out.print(x[4]+ "/   ");
        System.out.print(y[4]+ "/   ");
        System.out.print(z[4]+ "/   ");
        System.out.print(w[4]+ "/   ");
        System.out.println(a[4]+ "/   ");
    /*
    if(x[1] != 0){
        y[0] /= x[0];
        z[0] /= x[0];
        w[0] /= x[0];
        a[0] /= x[0];
        x[0] /= x[0];
        
        y[0] = (x[1] * y[0]) * -1;
        z[0] = (x[1] * z[0]) * -1;
        w[0] = (x[1] * w[0]) * -1;
        a[0] = (x[1] * a[0]) * -1;
        x[0] = (x[1] * x[0]) * -1;
        
        y[1] += y[0];
        z[1] += z[0];
        w[1] += w[0];
        a[1] += a[0];
        x[1] += x[0];
    }
    if(x[2]!= 0){
        y[0] /= x[0];
        z[0] /= x[0];
        w[0] /= x[0];
        a[0] /= x[0];
        x[0] /= x[0];
        
        y[0] = (x[2] * y[0]) * -1;
        z[0] = (x[2] * z[0]) * -1;
        w[0] = (x[2] * w[0]) * -1;
        a[0] = (x[2] * a[0]) * -1;
        x[0] = (x[2] * x[0]) * -1;
        
        y[2] += y[0];
        z[2] += z[0];
        w[2] += w[0];
        a[2] += a[0];
        x[2] += x[0];
    }
    if(x[3]!= 0){
        
        y[0] /= x[0];
        z[0] /= x[0];
        w[0] /= x[0];
        a[0] /= x[0];
        x[0] /= x[0];
        
        y[0] = (x[3] * y[0]) * -1;
        z[0] = (x[3] * z[0]) * -1;
        w[0] = (x[3] * w[0]) * -1;
        a[0] = (x[3] * a[0]) * -1;
        x[0] = (x[3] * x[0]) * -1;
        
        y[3] += y[0];
        z[3] += z[0];
        w[3] += w[0];
        a[3] += a[0];
        x[3] += x[0];
    }
    if(x[4]!= 0){
        
        y[0] /= x[0];
        z[0] /= x[0];
        w[0] /= x[0];
        a[0] /= x[0];
        x[0] /= x[0];
        
        y[0] = (x[4] * y[0]) * -1;
        z[0] = (x[4] * z[0]) * -1;
        w[0] = (x[4] * w[0]) * -1;
        a[0] = (x[4] * a[0]) * -1;
        x[0] = (x[4] * x[0]) * -1;
        
        y[4] += y[0];
        z[4] += z[0];
        w[4] += w[0];
        a[4] += a[0];
        x[4] += x[0];
    }*/
    /*
    if(y[2]!= 0){
        
        z[1] /= y[1];
        w[1] /= y[1];/
        a[1] /= y[1];
        x[1] /= y[1];
        y[1] /= y[1];
        
        
        z[1] = (y[2] * z[1]) * -1;
        w[1] = (y[2] * w[1]) * -1;
        a[1] = (y[2] * a[1]) * -1;
        x[1] = (y[2] * x[1]) * -1;
        y[1] = (y[2] * y[1]) * -1;
        
        y[2] += y[1];
        z[2] += z[1];
        w[2] += w[1];
        a[2] += a[1];
        x[2] += x[1];
    }
    
    if(y[3]!= 0){
        
        z[1] /= y[1];
        w[1] /= y[1];
        a[1] /= y[1];
        x[1] /= y[1];
        y[1] /= y[1];
        
        
        z[1] = (y[3] * z[1]) * -1;
        w[1] = (y[3] * w[1]) * -1;
        a[1] = (y[3] * a[1]) * -1;
        x[1] = (y[3] * x[1]) * -1;
        y[1] = (y[3] * y[1]) * -1;
        
        y[3] += y[1];
        z[3] += z[1];
        w[3] += w[1];
        a[3] += a[1];
        x[3] += x[1];
    }
    if(y[4]!= 0){
        
        z[1] /= y[1];
        w[1] /= y[1];
        a[1] /= y[1];
        x[1] /= y[1];
        y[1] /= y[1];
        
        
        z[1] = (y[4] * z[1]) * -1;
        w[1] = (y[4] * w[1]) * -1;
        a[1] = (y[4] * a[1]) * -1;
        x[1] = (y[4] * x[1]) * -1;
        y[1] = (y[4] * y[1]) * -1;
        
        y[4] += y[1];
        z[4] += z[1];
        w[4] += w[1];
        a[4] += a[1];
        x[4] += x[1];
    }
    */
    /*
    if(z[3] != 0){
        w[2] /= z[2];
        a[2] /= z[2];
        x[2] /= z[2];
        y[2] /= z[2];
        z[2] /= z[2];
        
        w[2] = (z[3] * w[2]) * -1;
        a[2] = (z[3] * a[2]) * -1;
        x[2] = (z[3] * x[2]) * -1;
        y[2] = (z[3] * y[2]) * -1;
        z[2] = (z[3] * z[2]) * -1;
        
        y[3] += y[2];
        z[3] += z[2];
        w[3] += w[2];
        a[3] += a[2];
        x[3] += x[2];
    }
    if(z[4] != 0){
        w[2] /= z[2];
        a[2] /= z[2];
        x[2] /= z[2];
        y[2] /= z[2];
        z[2] /= z[2];
        
        w[2] = (z[4] * w[2]) * -1;
        a[2] = (z[4] * a[2]) * -1;
        x[2] = (z[4] * x[2]) * -1;
        y[2] = (z[4] * y[2]) * -1;
        z[2] = (z[4] * z[2]) * -1;
        
        y[4] += y[2];
        z[4] += z[2];
        w[4] += w[2];
        a[4] += a[2];
        x[4] += x[2];
    }
    */
    /*if(w[4] != 0){
        
        z[3] /= w[3];
        a[3] /= w[3];
        x[3] /= w[3];
        y[3] /= w[3];
        w[3] /= w[3];
        
        z[3] = (w[4] * z[3]) * -1;
        w[3] = (w[4] * w[3]) * -1;
        a[3] = (w[4] * a[3]) * -1;
        x[3] = (w[4] * x[3]) * -1;
        y[3] = (w[4] * y[3]) * -1;
        
        y[4] += y[3];
        z[4] += z[3];
        w[4] += w[3];
        a[4] += a[3];
        x[4] += x[3];
    }*/
    /*
    if(a[3] != 0){
        z[4] /= a[4];
        x[4] /= a[4];
        y[4] /= a[4];
        w[4] /= a[4];
        a[4] /= a[4];
        
        w[4] = (a[3] * w[4]) * -1;
        x[4] = (a[3] * x[4]) * -1;
        y[4] = (a[3] * y[4]) * -1;
        z[4] = (a[3] * z[4]) * -1;
        a[4] = (a[3] * a[4]) * -1;
        
        y[3] += y[4];
        z[3] += z[4];
        w[3] += w[4];
        x[3] += x[4];   
        a[3] += a[4];
    }
    if(a[2] != 0){
        z[4] /= a[4];
        x[4] /= a[4];
        y[4] /= a[4];
        w[4] /= a[4];
        a[4] /= a[4];
        
        w[4] = (a[2] * w[4]) * -1;
        x[4] = (a[2] * x[4]) * -1;
        y[4] = (a[2] * y[4]) * -1;
        z[4] = (a[2] * z[4]) * -1;
        a[4] = (a[2] * a[4]) * -1;
        
        y[2] += y[4];
        z[2] += z[4];
        w[2] += w[4];
        x[2] += x[4];   
        a[2] += a[4];
    }
    if(a[1] != 0){
        z[4] /= a[4];
        x[4] /= a[4];
        y[4] /= a[4];
        w[4] /= a[4];
        a[4] /= a[4];
        
        w[4] = (a[1] * w[4]) * -1;
        x[4] = (a[1] * x[4]) * -1;
        y[4] = (a[1] * y[4]) * -1;
        z[4] = (a[1] * z[4]) * -1;
        a[4] = (a[1] * a[4]) * -1;
        
        y[1] += y[4];
        z[1] += z[4];
        w[1] += w[4];
        x[1] += x[4];   
        a[1] += a[4];
    }
    if(a[0] != 0){
        z[4] /= a[4];
        x[4] /= a[4];
        y[4] /= a[4];
        w[4] /= a[4];
        a[4] /= a[4];
        
        w[4] = (a[0] * w[4]) * -1;
        x[4] = (a[0] * x[4]) * -1;
        y[4] = (a[0] * y[4]) * -1;
        z[4] = (a[0] * z[4]) * -1;
        a[4] = (a[0] * a[4]) * -1;
        
        y[0] += y[4];
        z[0] += z[4];
        w[0] += w[4];
        x[0] += x[4];   
        a[0] += a[4];
    }
    */
    /*
    if(w[2] != 0){
        z[3] /= w[3];
        x[3] /= w[3];
        y[3] /= w[3];
        a[3] /= w[3];
        w[3] /= w[3];
        
        w[3] = (w[2] * w[3]) * -1;
        x[3] = (w[2] * x[3]) * -1;
        y[3] = (w[2] * y[3]) * -1;
        z[3] = (w[2] * z[3]) * -1;
        a[3] = (w[2] * a[3]) * -1;
        
        y[2] += y[3];
        z[2] += z[3];
        w[2] += w[3];
        x[2] += x[3];   
        a[2] += a[3];
    }
    if(w[1] != 0){
        z[3] /= w[3];
        x[3] /= w[3];
        y[3] /= w[3];
        a[3] /= w[3];
        w[3] /= w[3];
        
        w[3] = (w[1] * w[3]) * -1;
        x[3] = (w[1] * x[3]) * -1;
        y[3] = (w[1] * y[3]) * -1;
        z[3] = (w[1] * z[3]) * -1;
        a[3] = (w[1] * a[3]) * -1;
        
        y[1] += y[3];
        z[1] += z[3];
        w[1] += w[3];
        x[1] += x[3];   
        a[1] += a[3];
    }
    if(w[0] != 0){
        z[3] /= w[3];
        x[3] /= w[3];
        y[3] /= w[3];
        a[3] /= w[3];
        w[3] /= w[3];
        
        w[3] = (w[0] * w[3]) * -1;
        x[3] = (w[0] * x[3]) * -1;
        y[3] = (w[0] * y[3]) * -1;
        z[3] = (w[0] * z[3]) * -1;
        a[3] = (w[0] * a[3]) * -1;
        
        y[0] += y[3];
        z[0] += z[3];
        w[0] += w[3];
        x[0] += x[3];   
        a[0] += a[3];
    }
    */
    /*
    if(z[1] != 0){
        x[2] /= z[2];
        y[2] /= z[2];
        a[2] /= z[2];
        w[2] /= z[2];
        z[2] /= z[2];
        
        w[2] = (z[1] * w[2]) * -1;
        x[2] = (z[1] * x[2]) * -1;
        y[2] = (z[1] * y[2]) * -1;
        a[2] = (z[1] * a[2]) * -1;
        z[2] = (z[1] * z[2]) * -1;
                
        y[1] += y[2];
        w[1] += w[2];
        x[1] += x[2];   
        a[1] += a[2];
        z[1] += z[2];
    }
    if(z[0] != 0){
        x[2] /= z[2];
        y[2] /= z[2];
        a[2] /= z[2];
        w[2] /= z[2];
        z[2] /= z[2];
        
        w[2] = (z[0] * w[2]) * -1;
        x[2] = (z[0] * x[2]) * -1;
        y[2] = (z[0] * y[2]) * -1;
        a[2] = (z[0] * a[2]) * -1;
        z[2] = (z[0] * z[2]) * -1;
                
        y[0] += y[2];
        w[0] += w[2];
        x[0] += x[2];   
        a[0] += a[2];
        z[0] += z[2];
    }
    */
    /*if(y[0] != 0){
        x[1] /= y[1];
        a[1] /= y[1];
        w[1] /= y[1];
        z[1] /= y[1];
        y[1] /= y[1];
        
        w[1] = (y[0] * w[1]) * -1;
        x[1] = (y[0] * x[1]) * -1;
        a[1] = (y[0] * a[1]) * -1;
        z[1] = (y[0] * z[1]) * -1;
        y[1] = (y[0] * y[1]) * -1;
                
        w[0] += w[1];
        x[0] += x[1];   
        a[0] += a[1];
        z[0] += z[1];
        y[0] += y[1];
    }*/
    /*
        X  Y  Z  W  A           X  Y  Z  W  A
     0| 1  1  1  1  1        0| 1  1  1  1  1
     1| 0  1  1  1  1        1| 1  1  1  1  1
     2| 0  0  1  1  1        2| 1  1  1  1  1
     3| 0  0  0  1  1        3| 1  1  1  1  1
     4| 0  0  0  0  1        4| 1  1  1  1  1
        
        Tenho que zerar x[1,2,3,4] y[2,3,4] z[3,4] w[4]
    */  
    /*if(x[2] != 0|| x[3] != 0 || x[4] != 0){
        y[0] /= x[0];
        z[0] /= x[0];
        w[0] /= x[0];
        a[0] /= x[0];
        x[0] /= x[0];
    */
    
    
    
    }
}
